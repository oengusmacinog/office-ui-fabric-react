@import '../../common/common';

// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.

//
// Office UI Fabric
// --------------------------------------------------
// Persona styles

// Skype presence colors
$ms-color-presence-available:          #7FBA00;
$ms-color-presence-away:               #FCD116;
$ms-color-presence-busy:               #E81123;
$ms-color-presence-dnd-background:     #E81123;
$ms-color-presence-dnd-line:           #FFFFFF;
$ms-color-presence-offline:            #93ABBD;
$ms-color-presence-out-of-office:      $ms-color-magenta;

// Other presence colors
$ms-color-presence-blocked-background: #DEDEDE;
$ms-color-presence-blocked-line:       #C72D25;
$ms-color-presence-busy-stripe-light:  #E57A79;
$ms-color-presence-busy-stripe-dark:   #D00E0D;
$ms-color-presence-busy-average:       #D93B3B;

// Persona Sizes
$ms-Persona-size10:  20px;
$ms-Persona-size16:  16px;
$ms-Persona-size24:  24px;
$ms-Persona-size28:  28px;
$ms-Persona-size32:  32px;
$ms-Persona-size40:  40px;
$ms-Persona-size48:  48px;
$ms-Persona-size72:  72px;
$ms-Persona-size100: 100px;

// Presence Sizes
$ms-Persona-presenceSize6: 6px;
$ms-Persona-presenceSize8: 8px;
$ms-Persona-presenceSize12: 12px;
$ms-Persona-presenceSize20: 20px;
$ms-Persona-presenceSize28: 28px;
$ms-Persona-presenceBorder: 2px;

.root {
  @include ms-normalize;
  color: $ms-color-neutralPrimary;
  font-size: $ms-font-size-m;
  font-weight: $ms-font-weight-regular;
  position: relative;
  height: $ms-Persona-size48;
  display: flex;
  align-items: center;
  overflow: hidden;

  .contextualHost {
    display: none;
  }

  &:hover {
    .primaryText {
      color: $ms-color-neutralDark;
    }
  }
}

.imageArea {
  position: relative;
  text-align: center;
  flex: 0 0 auto;
  height: $ms-Persona-size48;
  width: $ms-Persona-size48;

  .image {
    border: 0px;
  }
}

//= Note: The doughboy placeholder is being deprecated.
// The initials color block (.ms-Persona-initials) will be used going forward
// as a fallback when the persona does not have an image.
.placeholder {
  color: $ms-color-white;
  position: absolute;
  right: 0;
  left: 0;
  font-size: 47px;
  top: 9px;
  z-index: $ms-zIndex-middle;
}

.initials {
  border-radius: 50%;
  color: $ms-color-white;
  font-size: $ms-font-size-l;
  font-weight: $ms-font-weight-regular;
  line-height: 46px;
  height: $ms-Persona-size48;

  @include high-contrast {
    border: 1px solid WindowText;
    -ms-high-contrast-adjust: none;
    color: WindowText;
    box-sizing: border-box;
    // Using important to override all of the more specific initialsIsColor rules
    background-color: Window !important;
  }
}

.image {
  @include ms-margin-right(10px);
  position: absolute;
  top: 0;
  @include ms-left(0);
  width: 100%;
  height: 100%;
  border-radius: 50%;
  perspective: 1px;
}

.image[src=""] {
  display: none;
}

.presence {
  background-color: $ms-color-presence-available;
  position: absolute;
  height: $ms-Persona-presenceSize12;
  width: $ms-Persona-presenceSize12;
  border-radius: 50%;
  top: auto;
  @include ms-right(-$ms-Persona-presenceBorder);
  bottom: -$ms-Persona-presenceBorder;
  border: $ms-Persona-presenceBorder solid $ms-color-white;
  text-align: center;
  box-sizing: content-box;
  // Setting -ms-high-contrast-adjust to none Overrides the default behaviors of high contrast more in the Edge browser.
  -ms-high-contrast-adjust: none;
  // This is a temporary local fix and should be removed once Fabric Core 6.0 is released.

  @include high-contrast {
    border-color: Window;
    color: Window;
    background-color: WindowText;
  }

  .presenceIcon {
    color: $ms-color-white;
    font-size: 6px;
    line-height: $ms-Persona-presenceSize12;
    vertical-align: top;

    @include high-contrast {
      color: Window;
    }
  }
}

.details {
  @include padding(0, 24px, 0, 16px);
  min-width: 0;
  width: 100%;
  @include text-align(left);
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

.primaryText,
.secondaryText,
.tertiaryText,
.optionalText,
.textContent {
  @include ms-no-wrap();
}

.primaryText {
  color: $ms-color-neutralPrimary;
  font-weight: $ms-font-weight-regular;
  font-size: $ms-font-size-l;
}

.secondaryText,
.tertiaryText,
.optionalText {
  color: $ms-color-neutralSecondary;
  font-weight: $ms-font-weight-regular;
  font-size: $ms-font-size-s;
  white-space: nowrap;
}

.tertiaryText,
.optionalText {
  display: none; // Hidden on default persona
}


//== Modifier: Size 10 Persona
//
.root.rootIsSize10 {
  height: $ms-Persona-size10;
  min-width: $ms-Persona-size10;
}

.rootIsSize10{
  .imageArea {
    overflow: visible;
    background: transparent;
    height: 0;
    width: 0;
  }

  .presence {
    @include ms-right(auto);
    top: 7px;
    @include ms-left(0);
    border: 0;
    height: $ms-Persona-presenceSize8;
    width: $ms-Persona-presenceSize8;

    @include high-contrast {
      top: 9px;
      border: 1px solid WindowText;
    }

    .presenceIcon {
      display: none;
    }
  }

  .details {
    @include ms-padding-left(17px);
  }

  .primaryText {
    font-size: $ms-font-size-s;
    line-height: $ms-Persona-size10;
  }

  .secondaryText {
    display: none;
  }
}

.size10NoPresenceIcon {
  font-size: 10px;
  position: absolute;
  top: 5px;
  @include ms-right(auto);
  @include ms-left(0);
}

//== Modifier: Size 10 Persona with read only state
//
// This variant includes a semicolon, and is
// most often presented within a People Picker.
.root.rootIsSize10.rootIsReadonly {
  padding: 0;
  background-color: transparent;

  .primaryText:after {
    content: ';';
  }
}

//== Modifier: Size 16 Persona
//
.root.rootIsSize16 {
  height: $ms-Persona-size16 + $ms-Persona-presenceBorder;
  min-width: $ms-Persona-size16  + $ms-Persona-presenceBorder;
  overflow: hidden;
}

.rootIsSize16 {
  .imageArea,
  .image {
    height: $ms-Persona-size16;
    width: $ms-Persona-size16;
  }

  .placeholder {
    font-size: 18px;
    top: 4px;
  }

  .initials {
    font-size: $ms-font-size-xs;
    height: $ms-Persona-size16;
    line-height: $ms-Persona-size16;
  }

  .presence {
    height: $ms-Persona-presenceSize6;
    width: $ms-Persona-presenceSize6;
    border-width: 1.5px;
  }

  .presenceIcon {
    display: none;
  }

  .primaryText {
    font-size: $ms-font-size-m;
    line-height: $ms-Persona-size28;
  }

  .secondaryText {
    display: none;
  }
}

//== Modifier: Size 24 Persona
//
.root.rootIsSize24 {
  height: $ms-Persona-size24 + $ms-Persona-presenceBorder;
  min-width: $ms-Persona-size24 + $ms-Persona-presenceBorder;
}

.rootIsSize24 {
  .imageArea,
  .image {
    height: $ms-Persona-size24;
    width: $ms-Persona-size24;
  }

  .placeholder {
    font-size: 18px;
    top: 4px;
  }

  .initials {
    font-size: $ms-font-size-xs;
    height: $ms-Persona-size24;
    line-height: $ms-Persona-size24;
  }

  .presence {
    height: $ms-Persona-presenceSize8;
    width: $ms-Persona-presenceSize8;

    &:after {
      display: none;
    }
  }

  .presenceIcon {
    display: none;
  }

  .details {
    padding: 0 12px;
  }

  .primaryText {
    font-size: $ms-font-size-m;
  }

  .secondaryText {
    display: none;
  }

  &.showSecondaryText {
    height: 36px;

    .primaryText,
    .secondaryText {
      display: block;
      height: 18px;
      line-height: 16px;
      overflow-x: hidden;
    }
  }
}


//== Modifier: Size 28 Persona
//
.root.rootIsSize28 {
  height: $ms-Persona-size28 + $ms-Persona-presenceBorder;
  min-width: $ms-Persona-size28 + $ms-Persona-presenceBorder;
  overflow: hidden;
}

.rootIsSize28 {
  .imageArea,
  .image {
    height: $ms-Persona-size28;
    width: $ms-Persona-size28;
  }

  .placeholder {
    font-size: 18px;
    top: 4px;
  }

  .initials {
    font-size: $ms-font-size-xs;
    height: $ms-Persona-size28;
    line-height: $ms-Persona-size28;
  }

  .presence {
    height: $ms-Persona-presenceSize8;
    width: $ms-Persona-presenceSize8;

    &:after {
      display: none;
    }
  }

  .presenceIcon {
    display: none;
  }

  .details {
    padding: 0 12px;
  }

  .primaryText {
    font-size: $ms-font-size-m;
  }

  .secondaryText {
    display: none;
  }

  &.showSecondaryText {
    height: 32px;

    .primaryText,
    .secondaryText {
      display: block;
      line-height: 16px;
      height: 16px;
      overflow-x: hidden;
    }
  }
}


//== Modifier: Size 32 Persona
//
.root.rootIsSize32 {
  height: $ms-Persona-size32 + $ms-Persona-presenceBorder;
  min-width: $ms-Persona-size32 + $ms-Persona-presenceBorder;
}

.rootIsSize32 {
  .imageArea,
  .image {
    height: $ms-Persona-size32;
    width: $ms-Persona-size32;
  }

  .placeholder {
    font-size: 28px;
    top: 6px;
  }

  .initials {
    font-size: $ms-font-size-m;
    height: $ms-Persona-size32;
    line-height: $ms-Persona-size32;
  }

  .presence {
    height: $ms-Persona-presenceSize8;
    width: $ms-Persona-presenceSize8;
  }

  .presenceIcon {
    display: none;
  }

  .primaryText {
    font-size: $ms-font-size-m;
  }

  .secondaryText {
    display: none;
  }

  &.showSecondaryText {
    .primaryText,
    .secondaryText {
      display: block;
      height: 16px;
      line-height: 16px;
      overflow-x: hidden;
    }
  }
}


//== Modifier: Size 40 Persona
//
.root.rootIsSize40 {
  height: $ms-Persona-size40 + $ms-Persona-presenceBorder;
  min-width: $ms-Persona-size40 + $ms-Persona-presenceBorder;
}

.rootIsSize40 {
  .imageArea,
  .image {
    height: $ms-Persona-size40;
    width: $ms-Persona-size40;
  }

  .placeholder {
    font-size: 38px;
    top: 5px;
  }

  .initials {
    font-size: $ms-font-size-m;
    height: $ms-Persona-size40;
    line-height: $ms-Persona-size40;
  }

  .primaryText {
    font-size: $ms-font-size-m;
  }
}


//== Modifier: Size 72 Persona
//
.root.rootIsSize72 {
  height: $ms-Persona-size72 + $ms-Persona-presenceBorder;
  min-width: $ms-Persona-size72 + $ms-Persona-presenceBorder;
}

.rootIsSize72 {
  .imageArea,
  .image {
    height: $ms-Persona-size72;
    width: $ms-Persona-size72;
  }

  .placeholder {
    font-size: 67px;
    top: 10px;
  }

  .initials {
    font-size: $ms-font-size-xxl;
    height: $ms-Persona-size72;
    line-height: 70px;
  }

  .presence {
    height: $ms-Persona-presenceSize20;
    width: $ms-Persona-presenceSize20;
  }

  .presenceIcon {
    line-height: $ms-Persona-presenceSize20;
    font-size: $ms-font-size-s;
  }

  .primaryText {
    font-size: $ms-font-size-xl;
  }

  .secondaryText {
    font-size: $ms-font-size-m;
  }

  .tertiaryText {
    display: block;
  }
}


//== Modifier: Size 100 Persona
//
.root.rootIsSize100 {
  height: $ms-Persona-size100 + $ms-Persona-presenceBorder;
  min-width: $ms-Persona-size100 + $ms-Persona-presenceBorder;
}

.rootIsSize100 {
  .imageArea,
  .image {
    height: $ms-Persona-size100;
    width: $ms-Persona-size100;
  }

  .placeholder {
    font-size: 95px;
    top: 12px;
  }

  .initials {
    font-size: $ms-font-size-su;
    height: $ms-Persona-size100;
    line-height: 96px;
  }

  .presence {
    height: $ms-Persona-presenceSize28;
    width: $ms-Persona-presenceSize28;
  }

  .presenceIcon {
    line-height: $ms-Persona-presenceSize28;
    font-size: $ms-font-size-m;
  }

  .primaryText {
    font-size: $ms-font-size-xl;
    font-weight: $ms-font-weight-semilight;
  }

  .secondaryText {
    font-size: $ms-font-size-m;
  }

  .tertiaryText,
  .optionalText {
    display: block; // Show tertiary and optional text
  }
}


//== Modifier: Persona with darker text
//
// Note: Typically applied when the component has a colored background.
.root.rootIsDarkText {
  .primaryText {
    color: $ms-color-neutralDark;
  }

  .secondaryText,
  .tertiaryText,
  .optionalText {
    color: $ms-color-neutralPrimary;
  }
}


//== Modifier: Selectable Persona
//
.root.rootIsSelectable {
  cursor: pointer;
  padding: 0 10px;

  &:not(.rootExtraLarge) {
    &:hover,
    &:focus {
      background-color: $ms-color-themeLighter;
      outline: 1px solid transparent;
    }
  }
}


//== Presence indicator variants.

//== Modifier: Persona with available presence
//
.root.rootIsAvailable {
  .presence {
    background-color: $ms-color-presence-available;

    @include high-contrast {
      background-color: WindowText;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-contrastWhiteDisabled;
    }
  }
}


//== Modifier: Persona with away presence
//
.root.rootIsAway {
  .presence {
    background-color: $ms-color-presence-away;

    @include high-contrast {
      background-color: WindowText;
    }
  }

  .presenceIcon {
    position: relative;
    @include ms-left(1px);
  }
}


//== Modifier: Persona with blocked presence
//
.root.rootIsBlocked {
  .presence {
    background-color: $ms-color-white;

    &::before {
      content: '';
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      @include ms-left(0);
      box-shadow: 0 0 0 2px $ms-color-presence-busy-average inset;
      border-radius: 50%;
    }

    &::after {
      content: '';
      width: 100%;
      height: 2px;
      background-color: $ms-color-presence-busy-average;
      transform: rotate(-45deg);
      position: absolute;
      // Using 40% as the top position of the cross bar element causes it to render in the correct position, even on very small persona sizes.
      top: 40%;
      @include ms-left(0);
    }

    @include high-contrast {
      color: $ms-color-contrastBlackDisabled;
      background-color: Window;

      &::before {
        box-shadow: 0 0 0 2px $ms-color-contrastBlackDisabled inset;
      }

      &::after {
        background-color: $ms-color-contrastBlackDisabled;
      }
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      color: $ms-color-contrastWhiteDisabled;

      &::before {
        box-shadow: 0 0 0 2px $ms-color-contrastWhiteDisabled inset;
      }

      &::after {
        background-color: $ms-color-contrastWhiteDisabled;
      }
    }
  }

  &.rootIsSize72 {
    .presence {
      &::after {
        top: 9px;
      }
    }
  }

  &.rootIsSize100 {
    .presence {
      &::after {
        top: 13px;
      }
    }
  }
}


//== Modifier: Persona with busy presence
//
.root.rootIsBusy {
  .presence {
    background-color: $ms-color-presence-busy-average;

    @include high-contrast {
      background-color: $ms-color-contrastBlackDisabled;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-contrastWhiteDisabled;
    }
  }
}


//== Modifier: Persona with do not disturb presence
//
.root.rootIsDoNotDisturb {
  .presence {
    background-color: $ms-color-presence-dnd-background;

    @include high-contrast {
      color: $ms-color-black;
      background-color: $ms-color-contrastBlackDisabled;

      &::before {
        background-color: $ms-color-contrastBlackDisabled;
      }

      &::after {
        background-color: $ms-color-contrastBlackDisabled;
      }
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-contrastWhiteDisabled;
    }
  }
}


//== Modifier: Persona with offline presence
//
.root.rootIsOffline {
  .presence {
    background-color: $ms-color-presence-offline;

    @include high-contrast {
      background-color: $ms-color-contrastBlackDisabled;
      box-shadow: 0 0 0 1px $ms-color-white inset;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-white;
      box-shadow: 0 0 0 1px $ms-color-black inset;
    }
  }
}